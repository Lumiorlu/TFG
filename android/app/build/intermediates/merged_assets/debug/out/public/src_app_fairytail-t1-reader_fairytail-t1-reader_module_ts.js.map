{"version":3,"file":"src_app_fairytail-t1-reader_fairytail-t1-reader_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEY;AAEnE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAqB;KACjC;CACF,CAAC;IAMW,kCAAkC,SAAlC,kCAAkC;CAAG;AAArC,kCAAkC;IAJ9C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,kCAAkC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBN;AACM;AACF;AAEA;AAE6C;AAEvB;IAWtD,2BAA2B,SAA3B,2BAA2B;CAAG;AAA9B,2BAA2B;IATvC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,mGAAkC;SACnC;QACD,YAAY,EAAE,CAAC,4EAAqB,CAAC;KACtC,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACnBU;AACwC;IAO7E,qBAAqB,SAArB,qBAAqB;IAIhC,YAAoB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QAClC,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC;IAChB,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,YAAY,CAAC,MAAU;QACrB,MAAM,IAAI,GAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,MAAM,MAAM,GAAG,0DAAG,CAAC,IAAI,CAAC,OAAO,EAAE,qBAAqB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QACnE,kEAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAE3F,CAAC;IAED,WAAW;QACT,MAAM,WAAW,GAAE,0DAAG,CAAC,IAAI,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;QAC1D,8DAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAM,IAAI,IAAE;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC;YACf,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAC;gBACzB,MAAM,GAAG,GAAG,MAAM,qEAAc,CAAC,IAAI,CAAC,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACvB;QAEH,CAAC,EAAC,CAAC,KAAK,CAAC,GAAG,GAAE,GAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;IACpC,CAAC;CAEF;;YAzCY,0DAAO;;AAOP,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,gFAA8C;;KAE/C,CAAC;GACW,qBAAqB,CAkCjC;AAlCiC","sources":["./src/app/fairytail-t1-reader/fairytail-t1-reader-routing.module.ts","./src/app/fairytail-t1-reader/fairytail-t1-reader.module.ts","./src/app/fairytail-t1-reader/fairytail-t1-reader.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FairytailT1ReaderPage } from './fairytail-t1-reader.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FairytailT1ReaderPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FairytailT1ReaderPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FairytailT1ReaderPageRoutingModule } from './fairytail-t1-reader-routing.module';\r\n\r\nimport { FairytailT1ReaderPage } from './fairytail-t1-reader.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FairytailT1ReaderPageRoutingModule\r\n  ],\r\n  declarations: [FairytailT1ReaderPage]\r\n})\r\nexport class FairytailT1ReaderPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ref, Storage, uploadBytes, listAll, getDownloadURL } from '@angular/fire/storage';\r\n\r\n@Component({\r\n  selector: 'app-fairytail-t1-reader',\r\n  templateUrl: './fairytail-t1-reader.page.html',\r\n  styleUrls: ['./fairytail-t1-reader.page.scss'],\r\n})\r\nexport class FairytailT1ReaderPage implements OnInit {\r\n\r\n  images:string[];\r\n\r\n  constructor(private storage: Storage){\r\n    this.images=[];\r\n   }\r\n\r\n  ngOnInit(){\r\n    this.getImagenes();\r\n  }\r\n\r\n  cargarImagen($event:any){\r\n    const file =$event.target.files[0];\r\n    console.log(file);\r\n\r\n    const imgRef = ref(this.storage, `Mangas/Fairy Tail/${file.name}`);\r\n    uploadBytes(imgRef, file).then(resp => console.log(resp)).catch(err => console.log(err));\r\n\r\n  }\r\n\r\n  getImagenes(){\r\n    const imagenesRef= ref(this.storage, 'Mangas/Fairy Tail');\r\n    listAll(imagenesRef).then(async resp=>{\r\n      console.log(resp);\r\n      this.images=[];\r\n      for(let item of resp.items){\r\n        const url = await getDownloadURL(item);\r\n        this.images.push(url);\r\n      }\r\n    \r\n    }).catch(err=>{console.log(err)});\r\n  }\r\n\r\n}\r\n\r\n"],"names":[],"sourceRoot":"webpack:///"}