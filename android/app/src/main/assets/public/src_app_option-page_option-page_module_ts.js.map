{"version":3,"file":"src_app_option-page_option-page_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEH;AAEpD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAc;KAC1B;CACF,CAAC;IAMW,2BAA2B,SAA3B,2BAA2B;CAAG;AAA9B,2BAA2B;IAJvC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACF;AAEA;AAE8B;AAEvB;IAWvC,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAThC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,oFAA2B;SAC5B;QACD,YAAY,EAAE,CAAC,6DAAc,CAAC;KAC/B,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnB4B;AAQpB;AAEc;IAO1C,cAAc,SAAd,cAAc;IAYzB,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAVpE,eAAU,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;IASyD,CAAC;IAExE,QAAQ;QACN;;;;WAIG;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAY,EAAE,EAAE;YACjE,mCAAmC;YACnC,uIAAuI;YACvI;;;eAGG;YACH,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT;;WAEG;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW;aACb,WAAW,EAAE;aACb,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,MAAM,CAAC,OAAO,CAAC,+BAA+B,CAAC,EAAE;YACnD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjD,qCAAqC;YACvC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAKF;;YAvEQ,mDAAM;YAEN,+DAAW;;AAOP,cAAc;IAL1B,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wEAAsC;;KAEvC,CAAC;GACW,cAAc,CA8D1B;AA9D0B","sources":["./src/app/option-page/option-page-routing.module.ts","./src/app/option-page/option-page.module.ts","./src/app/option-page/option-page.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OptionPagePage } from './option-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OptionPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OptionPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OptionPagePageRoutingModule } from './option-page-routing.module';\n\nimport { OptionPagePage } from './option-page.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OptionPagePageRoutingModule\n  ],\n  declarations: [OptionPagePage]\n})\nexport class OptionPagePageModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { User, user } from '@angular/fire/auth';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-option-page',\n  templateUrl: './option-page.page.html',\n  styleUrls: ['./option-page.page.scss'],\n})\nexport class OptionPagePage implements OnInit, OnDestroy {\n  userForm: FormGroup;\n  successMsg = '';\n  errorMsg = '';\n\n  // si tu declaras cualquier propiedas aqui luego en el template la puedes usar con interpolaciÃ³n {{userTest}}\n  // si tiener propiedades basta con acceder con \".\" en plan userTest.email por ejemplo. Si no sabes todas sus propiedades\n  // puedes usar el pipe json para verlo asi => {{userTest | json}}\n  userTest: any;\n\n  //creo una subscripcion donde alojare la subscripcion de usuario\n  userSubs$: Subscription;\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    /********\n     * asi te subscribis a un observable para leer su valor y usarlo como quieras\n     * lo unico \"raro\" es que asigno todo a una variable del tipo subscription porque luego me interesa \"desuscribirme\"\n     * en caso de que cambie de pagina para que se rompa la conexion sino por detras continuaria\n     */\n\n    this.userSubs$ = this.authService.user$.subscribe((usuario: any) => {\n      // eslint-disable-next-line max-len\n      // es importante decir que la funcion handler recive un parametro del tipo any sino el compilador cree que no tiene propiedades y llora\n      /*******\n       * si hay algun cambio en este observable, esta funcion handler se volvera a ejecutar y esta asignacion\n       * se volvera a realizar VALE!!!!??\n       */\n      this.userTest = usuario;\n    });\n  }\n\n  ngOnDestroy(): void {\n    /********\n     * si utilizas el metodo de subscribe tienes que desuscribite justo ahi de la siguiente forma\n     */\n    this.userSubs$.unsubscribe();\n  }\n\n  logOut() {\n    this.authService\n      .signoutUser()\n      .then((res) => {\n        this.router.navigateByUrl('/home');\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  delete(userTest) {\n    console.log(userTest);\n    if (window.confirm('Do you really want to delete?')) {\n      this.authService.deleteUser(userTest).then((res) => {\n        //this.router.navigateByUrl('/home');\n      });\n    }\n  }\n\n  /*******\n   * te voy a mostrar todas las formas de consumir un observable\n   */\n}\n"],"names":[],"sourceRoot":"webpack:///"}