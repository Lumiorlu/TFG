{"version":3,"file":"src_app_option-page_option-page_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEH;AAEpD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAc;KAC1B;CACF,CAAC;IAMW,2BAA2B,SAA3B,2BAA2B;CAAG;AAA9B,2BAA2B;IAJvC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACF;AAEA;AAE8B;AAEvB;IAWvC,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAThC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,oFAA2B;SAC5B;QACD,YAAY,EAAE,CAAC,6DAAc,CAAC;KAC/B,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnB4B;AAQpB;AAEc;IAO1C,cAAc,SAAd,cAAc;IAYzB,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAVpE,eAAU,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;IASyD,CAAC;IAExE,QAAQ;QACN;;;;WAIG;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAY,EAAE,EAAE;YACjE,mCAAmC;YACnC,uIAAuI;YACvI;;;eAGG;YACH,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT;;WAEG;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW;aACb,WAAW,EAAE;aACb,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,MAAM,CAAC,OAAO,CAAC,+BAA+B,CAAC,EAAE;YACnD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAKF;;YAvEQ,mDAAM;YAEN,+DAAW;;AAOP,cAAc;IAL1B,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wEAAsC;;KAEvC,CAAC;GACW,cAAc,CA8D1B;AA9D0B","sources":["./src/app/option-page/option-page-routing.module.ts","./src/app/option-page/option-page.module.ts","./src/app/option-page/option-page.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OptionPagePage } from './option-page.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OptionPagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OptionPagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OptionPagePageRoutingModule } from './option-page-routing.module';\r\n\r\nimport { OptionPagePage } from './option-page.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    OptionPagePageRoutingModule\r\n  ],\r\n  declarations: [OptionPagePage]\r\n})\r\nexport class OptionPagePageModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { User, user } from '@angular/fire/auth';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-option-page',\r\n  templateUrl: './option-page.page.html',\r\n  styleUrls: ['./option-page.page.scss'],\r\n})\r\nexport class OptionPagePage implements OnInit, OnDestroy {\r\n  userForm: FormGroup;\r\n  successMsg = '';\r\n  errorMsg = '';\r\n\r\n  // si tu declaras cualquier propiedas aqui luego en el template la puedes usar con interpolaciÃ³n {{userTest}}\r\n  // si tiener propiedades basta con acceder con \".\" en plan userTest.email por ejemplo. Si no sabes todas sus propiedades\r\n  // puedes usar el pipe json para verlo asi => {{userTest | json}}\r\n  userTest: any;\r\n\r\n  //creo una subscripcion donde alojare la subscripcion de usuario\r\n  userSubs$: Subscription;\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    /********\r\n     * asi te subscribis a un observable para leer su valor y usarlo como quieras\r\n     * lo unico \"raro\" es que asigno todo a una variable del tipo subscription porque luego me interesa \"desuscribirme\"\r\n     * en caso de que cambie de pagina para que se rompa la conexion sino por detras continuaria\r\n     */\r\n\r\n    this.userSubs$ = this.authService.user$.subscribe((usuario: any) => {\r\n      // eslint-disable-next-line max-len\r\n      // es importante decir que la funcion handler recive un parametro del tipo any sino el compilador cree que no tiene propiedades y llora\r\n      /*******\r\n       * si hay algun cambio en este observable, esta funcion handler se volvera a ejecutar y esta asignacion\r\n       * se volvera a realizar VALE!!!!??\r\n       */\r\n      this.userTest = usuario;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    /********\r\n     * si utilizas el metodo de subscribe tienes que desuscribite justo ahi de la siguiente forma\r\n     */\r\n    this.userSubs$.unsubscribe();\r\n  }\r\n\r\n  logOut() {\r\n    this.authService\r\n      .signoutUser()\r\n      .then((res) => {\r\n        this.router.navigateByUrl('/home');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  delete(userTest) {\r\n    console.log(userTest);\r\n    if (window.confirm('Do you really want to delete?')) {\r\n      this.authService.deleteUser(userTest).then((res) => {\r\n        this.router.navigateByUrl('/home');\r\n      });\r\n    }\r\n  }\r\n\r\n  /*******\r\n   * te voy a mostrar todas las formas de consumir un observable\r\n   */\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}